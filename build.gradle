plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'idea'
    id "io.freefair.lombok" version "5.1.0"
    id 'java-library'
}

group = 'org.slsdemo'
version = '0.0.1'
description = 'spring-boot project lifted and shifted to run on AWS lambda'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-log4j:1.0.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.0'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.3.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.3.RELEASE'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'mysql:mysql-connector-java:8.0.21'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.3.RELEASE'
    implementation 'javax.servlet:javax.servlet-api:4.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.3.3.RELEASE'
    testImplementation 'io.rest-assured:rest-assured:3.3.0'
}

// Task for building the zip file for upload
task buildZip(type: Zip) {
    // Using the Zip API from gradle to build a zip file of all the dependencies
    //
    // The path to this zip file can be set in the serverless.yml file for the
    // package/artifact setting for deployment to the S3 bucket
    //
    // Link: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.bundling.Zip.html

    // set the base name of the zip file
    archiveBaseName = "springboot-sls"
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

build.dependsOn buildZip
